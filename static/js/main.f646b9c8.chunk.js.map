{"version":3,"sources":["context.js","components/Contacts/contact.js","components/Contacts/Contacts.js","components/Layout/Header.js","components/pages/About.js","components/Layout/TextInputGroup.js","components/Contacts/AddContacts.js","components/Contacts/EditContact.js","components/tests/Test.js","components/pages/NotFound.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","Contacts_contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContacts","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","Layout_TextInputGroup","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","NotFound","App","context_Provider","Layout_Header","react_router","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f646b9c8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(\n                    contact => contact.id === action.payload.id ? (contact = action.payload) : contact\n                )\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => this.setState( state => reducer(state, action))\n    };\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n        this.setState({contacts: res.data});\n\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n\n\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport axios from 'axios';\n\nimport {Consumer} from \"../../context\";\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n    onDeleteClick = async (id, dispatch) => {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({type: 'DELETE_CONTACT', payload: id});\n\n    };\n    render() {\n        const {id, name, email, phone} = this.props.contact;\n        const { showContactInfo } = this.state;\n        return (\n\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                return(\n                    <div className=\"cad card-body mb-3\">\n                        <h4>{name}\n                            <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})\n                            } className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}/>\n                            <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)} />\n\n                            <Link to={`contact/edit/${id}`}> <i className=\"fas fa-pencil-alt\" style={{cursor: 'pointer', float: 'right', color: 'green', marginRight: '1rem'}}/>\n                            </Link>\n                        </h4>\n                        {showContactInfo ? (\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone}</li>\n                            </ul>\n                        ): null}\n\n                    </div>\n                )\n                }}\n            </Consumer>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: propTypes.object.isRequired,\n};\n\nexport default Contact;","import React, {Component} from 'react';\nimport Contact from './contact';\n\nimport {Consumer} from \"../../context\";\n\nclass Contacts extends Component {\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                return(\n                    <React.Fragment>\n                        <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\n                        {contacts.map(contact => (\n                            <Contact key={contact.id}  contact={contact} />\n                        ))}\n                    </React.Fragment>\n                );\n                }}\n            </Consumer>\n\n        );\n    }\n}\n\nexport default Contacts;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n    const {branding} = props;\n    return(\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"/>Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"/>Add</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"/>About</Link>\n                    </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: propTypes.string.isRequired\n};\n\n\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n    return(\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contact</p>\n            <p className=\"text-secondary\">Version 1.0.0 via TechSavvyNG</p>\n        </div>\n    )\n}","import React from 'react';\nimport propTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n        }) => {\n    return(\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input type={type} name={name} className={classnames('form-control form-control-lg', {\n                'is-invalid': error})}\n                   placeholder={placeholder} value={value} onChange={onChange}/>\n\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n\n        </div>\n    )\n};\n\nTextInputGroup.propTypes  = {\n    name: propTypes.string.isRequired,\n    email: propTypes.string.isRequired,\n    phone: propTypes.string.isRequired,\n    value: propTypes.string.isRequired,\n    placeholder: propTypes.string.isRequired,\n    label: propTypes.string.isRequired,\n    onChange: propTypes.func.isRequired,\n    error: propTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\nexport default TextInputGroup;\n","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from '../Layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContacts extends Component {\n    state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    };\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone} = this.state;\n\n        //Check for Errors\n        if (name === '') {\n            this.setState({errors: { name: 'Name is required'} });\n            return;\n        }\n\n        if (email === '') {\n            this.setState({errors: { email: 'Email is required'} });\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({errors: { phone: 'Phone is required'} });\n            return;\n        }\n\n        const newContact  = {\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n        //Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n    render() {\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n            {value => {\n                const {dispatch} = value;\n                return(\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header\">Add Contact</div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                                <TextInputGroup\n                                label=\"Name\"\n                                name=\"name\"\n                                placeholder=\"Enter Name\"\n                                value={name}\n                                onChange={this.onChange}\n                                error={errors.name}\n                                />\n\n                                <TextInputGroup\n                                label=\"Email\"\n                                name=\"email\"\n                                type=\"email\"\n                                placeholder=\"Enter Email\"\n                                value={email}\n                                onChange={this.onChange}\n                                error={errors.email}\n                                />\n\n                                <TextInputGroup\n                                label=\"Phone\"\n                                name=\"phone\"\n                                placeholder=\"Enter Phone\"\n                                value={phone}\n                                onChange={this.onChange}\n                                error={errors.phone}\n                                />\n\n                                <input type=\"submit\" value=\"Add Contacts\" className=\"btn btn-light btn-block\"/>\n                            </form>\n                        </div>\n\n                    </div>\n                )\n            }}\n            </Consumer>\n        )\n\n    }\n}\n\nexport default AddContacts;","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from '../Layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    //Calling of ComponentDidMount\n    async componentDidMount() {\n        const {id} = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n\n    };\n\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone} = this.state;\n\n        //Check for Errors\n        if (name === '') {\n            this.setState({errors: { name: 'Name is required'} });\n            return;\n        }\n\n        if (email === '') {\n            this.setState({errors: { email: 'Email is required'} });\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({errors: { phone: 'Phone is required'} });\n            return;\n        }\n\n\n        const updContact  = {\n            name,\n            email,\n            phone\n        };\n\n        const {id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n        //Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n    render() {\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return(\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\n                                </form>\n                            </div>\n\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n}\n\nexport default EditContact;","import React, {Component} from 'react';\n\nclass Test extends Component {\n    state = {\n        title: '',\n        body: ''\n    };\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n            .then(response => response.json())\n            .then(data => this.setState({title: data.title, body: data.body}));\n    };\n\n    render() {\n        const {title, body} = this.state;\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        );\n    }\n}\n\nexport default Test;","import React from 'react';\n\nexport default () => {\n    return(\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\"> 404</span> Page Not Found</h1>\n            <p className=\"lead\">Sorry, the page you are looking for those not exist.</p>\n        </div>\n    );\n};","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/Contacts/Contacts';\nimport Header from './components/Layout/Header';\nimport About from './components/pages/About';\nimport AddContacts from './components/Contacts/AddContacts';\nimport EditContact from './components/Contacts/EditContact';\nimport Test from './components/tests/Test';\nimport NotFound from './components/pages/NotFound';\n\nimport {Provider} from \"./context\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n            <Router>\n          <div className=\"App\">\n              <Header branding=\"Contact Manager\"/>\n              <div className=\"container\">\n                  <Switch>\n                      <Route exact path=\"/\" component={Contacts}/>\n                      <Route exact path=\"/about\" component={About} />\n                      <Route exact path=\"/contact/add\" component={AddContacts} />\n                      <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                      <Route exact path=\"/test\" component={Test}/>\n                      <Route component={NotFound}/>\n\n                  </Switch>\n\n              </div>\n          </div>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}